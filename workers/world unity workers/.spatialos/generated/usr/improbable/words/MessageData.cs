// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.words.MessageData in improbable/words/Message.schema.

namespace Improbable.Words
{

public partial struct MessageData : global::System.IEquatable<MessageData>, global::Improbable.Collections.IDeepCopyable<MessageData>
{
  /// <summary>
  /// Field message = 1.
  /// </summary>
  public string message;

  public MessageData(string message)
  {
    this.message = message;
  }

  public static MessageData Create()
  {
    var _result = new MessageData();
    _result.message = "";
    return _result;
  }

  public MessageData DeepCopy()
  {
    var _result = new MessageData();
    _result.message = message;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is MessageData && Equals((MessageData) _obj);
  }

  public static bool operator==(MessageData a, MessageData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(MessageData a, MessageData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(MessageData _obj)
  {
    return
        message == _obj.message;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + (message == null ? 0 : message.GetHashCode());
    return _result;
  }
}

public static class MessageData_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                                  MessageData _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      if (_data.message != null)
      {
        var _buffer = global::System.Text.Encoding.UTF8.GetBytes(_data.message);
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 1, (byte*) _pool.Pin(_buffer), (uint) _buffer.Length);
      }
      else
      {
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 1, null, 0);
      }
    }
  }

  public static unsafe MessageData Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    MessageData _data;
    {
      _data.message = global::System.Text.Encoding.UTF8.GetString(global::Improbable.Worker.Bytes.CopyOf(global::Improbable.Worker.Internal.Pbio.GetBytes(_obj, 1), global::Improbable.Worker.Internal.Pbio.GetBytesLength(_obj, 1)).BackingArray);
    }
    return _data;
  }
}

}
