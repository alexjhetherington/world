// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.core.LiveTimeData in improbable/core/LiveTime.schema.

namespace Improbable.Core
{

public partial struct LiveTimeData : global::System.IEquatable<LiveTimeData>, global::Improbable.Collections.IDeepCopyable<LiveTimeData>
{
  /// <summary>
  /// Field timestamp = 1.
  /// </summary>
  public float timestamp;

  public LiveTimeData(float timestamp)
  {
    this.timestamp = timestamp;
  }

  public static LiveTimeData Create()
  {
    var _result = new LiveTimeData();
    return _result;
  }

  public LiveTimeData DeepCopy()
  {
    var _result = new LiveTimeData();
    _result.timestamp = timestamp;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is LiveTimeData && Equals((LiveTimeData) _obj);
  }

  public static bool operator==(LiveTimeData a, LiveTimeData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(LiveTimeData a, LiveTimeData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(LiveTimeData _obj)
  {
    return
        timestamp == _obj.timestamp;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + timestamp.GetHashCode();
    return _result;
  }
}

public static class LiveTimeData_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                                  LiveTimeData _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Worker.Internal.Pbio.AddFloat(_obj, 1, _data.timestamp);
    }
  }

  public static unsafe LiveTimeData Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    LiveTimeData _data;
    {
      _data.timestamp = global::Improbable.Worker.Internal.Pbio.GetFloat(_obj, 1);
    }
    return _data;
  }
}

}
