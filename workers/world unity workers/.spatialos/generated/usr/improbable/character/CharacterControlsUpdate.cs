// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.character.CharacterControlsUpdate in improbable/character/CharacterControls.schema.

namespace Improbable.Character
{

public partial struct CharacterControlsUpdate : global::System.IEquatable<CharacterControlsUpdate>, global::Improbable.Collections.IDeepCopyable<CharacterControlsUpdate>
{
  /// <summary>
  /// Field vertical_axis = 1.
  /// </summary>
  public float verticalAxis;
  /// <summary>
  /// Field horizontal_axis = 2.
  /// </summary>
  public float horizontalAxis;
  /// <summary>
  /// Field timestamp = 3.
  /// </summary>
  public float timestamp;
  /// <summary>
  /// Field spirit_mode = 4.
  /// </summary>
  public bool spiritMode;

  public CharacterControlsUpdate(
      float verticalAxis,
      float horizontalAxis,
      float timestamp,
      bool spiritMode)
  {
    this.verticalAxis = verticalAxis;
    this.horizontalAxis = horizontalAxis;
    this.timestamp = timestamp;
    this.spiritMode = spiritMode;
  }

  public static CharacterControlsUpdate Create()
  {
    var _result = new CharacterControlsUpdate();
    return _result;
  }

  public CharacterControlsUpdate DeepCopy()
  {
    var _result = new CharacterControlsUpdate();
    _result.verticalAxis = verticalAxis;
    _result.horizontalAxis = horizontalAxis;
    _result.timestamp = timestamp;
    _result.spiritMode = spiritMode;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is CharacterControlsUpdate && Equals((CharacterControlsUpdate) _obj);
  }

  public static bool operator==(CharacterControlsUpdate a, CharacterControlsUpdate b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(CharacterControlsUpdate a, CharacterControlsUpdate b)
  {
    return !a.Equals(b);
  }

  public bool Equals(CharacterControlsUpdate _obj)
  {
    return
        verticalAxis == _obj.verticalAxis &&
        horizontalAxis == _obj.horizontalAxis &&
        timestamp == _obj.timestamp &&
        spiritMode == _obj.spiritMode;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + verticalAxis.GetHashCode();
    _result = (_result * 977) + horizontalAxis.GetHashCode();
    _result = (_result * 977) + timestamp.GetHashCode();
    _result = (_result * 977) + spiritMode.GetHashCode();
    return _result;
  }
}

public static class CharacterControlsUpdate_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                                  CharacterControlsUpdate _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Worker.Internal.Pbio.AddFloat(_obj, 1, _data.verticalAxis);
    }
    {
      global::Improbable.Worker.Internal.Pbio.AddFloat(_obj, 2, _data.horizontalAxis);
    }
    {
      global::Improbable.Worker.Internal.Pbio.AddFloat(_obj, 3, _data.timestamp);
    }
    {
      global::Improbable.Worker.Internal.Pbio.AddBool(_obj, 4, (byte) (_data.spiritMode ? 1 : 0));
    }
  }

  public static unsafe CharacterControlsUpdate Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    CharacterControlsUpdate _data;
    {
      _data.verticalAxis = global::Improbable.Worker.Internal.Pbio.GetFloat(_obj, 1);
    }
    {
      _data.horizontalAxis = global::Improbable.Worker.Internal.Pbio.GetFloat(_obj, 2);
    }
    {
      _data.timestamp = global::Improbable.Worker.Internal.Pbio.GetFloat(_obj, 3);
    }
    {
      _data.spiritMode = global::Improbable.Worker.Internal.Pbio.GetBool(_obj, 4) != 0;
    }
    return _data;
  }
}

}
