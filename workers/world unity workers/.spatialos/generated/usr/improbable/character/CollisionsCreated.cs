// Generated by SpatialOS codegen. DO NOT EDIT!
// source: CollisionsCreated in improbable/character/CollisionsCreated.schema.

namespace Improbable.Character
{

public static class CollisionsCreated_Extensions
{
  public static CollisionsCreated.Data Get(this global::Improbable.Worker.IComponentData<CollisionsCreated> data)
  {
    return (CollisionsCreated.Data) data;
  }

  public static CollisionsCreated.Update Get(this global::Improbable.Worker.IComponentUpdate<CollisionsCreated> update)
  {
    return (CollisionsCreated.Update) update;
  }

  public static CollisionsCreated.Commands.ServerCollisionCreated.Request Get(this global::Improbable.Worker.ICommandRequest<CollisionsCreated.Commands.ServerCollisionCreated> request)
  {
    return (CollisionsCreated.Commands.ServerCollisionCreated.Request) request;
  }

  public static CollisionsCreated.Commands.ServerCollisionCreated.Response Get(this global::Improbable.Worker.ICommandResponse<CollisionsCreated.Commands.ServerCollisionCreated> response)
  {
    return (CollisionsCreated.Commands.ServerCollisionCreated.Response) response;
  }

  public static CollisionsCreated.Commands.ClientCollisionCreated.Request Get(this global::Improbable.Worker.ICommandRequest<CollisionsCreated.Commands.ClientCollisionCreated> request)
  {
    return (CollisionsCreated.Commands.ClientCollisionCreated.Request) request;
  }

  public static CollisionsCreated.Commands.ClientCollisionCreated.Response Get(this global::Improbable.Worker.ICommandResponse<CollisionsCreated.Commands.ClientCollisionCreated> response)
  {
    return (CollisionsCreated.Commands.ClientCollisionCreated.Response) response;
  }
}

public partial class CollisionsCreated : global::Improbable.Worker.IComponentMetaclass
{
  public const uint ComponentId = 1009;

  uint global::Improbable.Worker.IComponentMetaclass.ComponentId
  {
    get { return ComponentId; }
  }

  /// <summary>
  /// Concrete data type for the CollisionsCreated component.
  /// </summary>
  public class Data : global::Improbable.Worker.IComponentData<CollisionsCreated>, global::Improbable.Collections.IDeepCopyable<Data>
  {
    public global::Improbable.Character.CollisionsCreatedData Value;

    public Data(global::Improbable.Character.CollisionsCreatedData value)
    {
      Value = value;
    }

    public Data(global::Improbable.Collections.List<global::Improbable.Character.NewCollision> newCollisions)
    {
      Value = new global::Improbable.Character.CollisionsCreatedData(newCollisions);
    }

    public Data DeepCopy()
    {
      return new Data(Value.DeepCopy());
    }

    public global::Improbable.Worker.IComponentUpdate<CollisionsCreated> ToUpdate()
    {
      var update = new Update();
      update.SetNewCollisions(Value.newCollisions);
      return update;
    }
  }

  /// <summary>
  /// Concrete update type for the CollisionsCreated component.
  /// </summary>
  public class Update : global::Improbable.Worker.IComponentUpdate<CollisionsCreated>, global::Improbable.Collections.IDeepCopyable<Update>
  {
    /// <summary>
    /// Field new_collisions = 1.
    /// </summary>
    public global::Improbable.Collections.Option<global::Improbable.Collections.List<global::Improbable.Character.NewCollision>> newCollisions;
    public Update SetNewCollisions(global::Improbable.Collections.List<global::Improbable.Character.NewCollision> _value)
    {
      if (_value == null)
      {
        throw new System.ArgumentNullException(null, "Attempt to send update with null value.");
      }
      newCollisions.Set(_value);
      return this;
    }

    public Update DeepCopy()
    {
      var _result = new Update();
      if (newCollisions.HasValue)
      {
        global::Improbable.Collections.List<global::Improbable.Character.NewCollision> field;
        field = newCollisions.Value.DeepCopy();
        _result.newCollisions.Set(field);
      }
      return _result;
    }

    public global::Improbable.Worker.IComponentData<CollisionsCreated> ToInitialData()
    {
      return new Data(new global::Improbable.Character.CollisionsCreatedData(newCollisions.Value));
    }

    public void ApplyTo(global::Improbable.Worker.IComponentData<CollisionsCreated> _data)
    {
      var _concrete = _data.Get();
      if (newCollisions.HasValue)
      {
        _concrete.Value.newCollisions = newCollisions.Value;
      }
    }
  }

  public partial class Commands
  {
    /// <summary>
    /// Command server_collision_created.
    /// </summary>
    public partial class ServerCollisionCreated : global::Improbable.Worker.ICommandMetaclass
    {
      public uint ComponentId { get { return 1009; } }
      public uint CommandId { get { return 1; } }

      public class Request : global::Improbable.Worker.ICommandRequest<ServerCollisionCreated>, global::Improbable.Collections.IDeepCopyable<Request>
      {
        public global::Improbable.Character.ServerCollisionCreatedRequest Value;

        public Request(global::Improbable.Character.ServerCollisionCreatedRequest value)
        {
          Value = value;
        }

        public Request(global::Improbable.Character.NewCollision newCollision)
        {
          Value = new global::Improbable.Character.ServerCollisionCreatedRequest(newCollision);
        }

        public Request DeepCopy()
        {
          return new Request(Value.DeepCopy());
        }

        public global::Improbable.Worker.Internal.GenericCommandObject ToGenericObject()
        {
          return new global::Improbable.Worker.Internal.GenericCommandObject(1, this);
        }
      }

      public class Response : global::Improbable.Worker.ICommandResponse<ServerCollisionCreated>, global::Improbable.Collections.IDeepCopyable<Response>
      {
        public global::Improbable.Character.ServerCollisionCreatedResponse Value;

        public Response(global::Improbable.Character.ServerCollisionCreatedResponse value)
        {
          Value = value;
        }

        public Response()
        {
          Value = new global::Improbable.Character.ServerCollisionCreatedResponse();
        }

        public Response DeepCopy()
        {
          return new Response(Value.DeepCopy());
        }

        public global::Improbable.Worker.Internal.GenericCommandObject ToGenericObject()
        {
          return new global::Improbable.Worker.Internal.GenericCommandObject(1, this);
        }
      }
    }
    /// <summary>
    /// Command client_collision_created.
    /// </summary>
    public partial class ClientCollisionCreated : global::Improbable.Worker.ICommandMetaclass
    {
      public uint ComponentId { get { return 1009; } }
      public uint CommandId { get { return 2; } }

      public class Request : global::Improbable.Worker.ICommandRequest<ClientCollisionCreated>, global::Improbable.Collections.IDeepCopyable<Request>
      {
        public global::Improbable.Character.ClientCollisionCreatedRequest Value;

        public Request(global::Improbable.Character.ClientCollisionCreatedRequest value)
        {
          Value = value;
        }

        public Request(global::Improbable.Character.NewCollision newCollision)
        {
          Value = new global::Improbable.Character.ClientCollisionCreatedRequest(newCollision);
        }

        public Request DeepCopy()
        {
          return new Request(Value.DeepCopy());
        }

        public global::Improbable.Worker.Internal.GenericCommandObject ToGenericObject()
        {
          return new global::Improbable.Worker.Internal.GenericCommandObject(2, this);
        }
      }

      public class Response : global::Improbable.Worker.ICommandResponse<ClientCollisionCreated>, global::Improbable.Collections.IDeepCopyable<Response>
      {
        public global::Improbable.Character.ClientCollisionCreatedResponse Value;

        public Response(global::Improbable.Character.ClientCollisionCreatedResponse value)
        {
          Value = value;
        }

        public Response()
        {
          Value = new global::Improbable.Character.ClientCollisionCreatedResponse();
        }

        public Response DeepCopy()
        {
          return new Response(Value.DeepCopy());
        }

        public global::Improbable.Worker.Internal.GenericCommandObject ToGenericObject()
        {
          return new global::Improbable.Worker.Internal.GenericCommandObject(2, this);
        }
      }
    }
  }

  // Implementation details below here.
  //----------------------------------------------------------------

  public global::Improbable.Worker.Internal.ComponentProtocol.ComponentVtable Vtable {
    get {
      global::Improbable.Worker.Internal.ComponentProtocol.ComponentVtable vtable;
      vtable.ComponentId = ComponentId;
      unsafe { vtable.UserData = null; }
      vtable.Free = global::System.Runtime.InteropServices.Marshal
          .GetFunctionPointerForDelegate(global::Improbable.Worker.Internal.ClientHandles.ClientFree);
      vtable.Copy = global::System.Runtime.InteropServices.Marshal
          .GetFunctionPointerForDelegate(global::Improbable.Worker.Internal.ClientHandles.ClientCopy);
      vtable.Deserialize = global::System.Runtime.InteropServices.Marshal
          .GetFunctionPointerForDelegate(clientDeserialize);
      vtable.Serialize = global::System.Runtime.InteropServices.Marshal
          .GetFunctionPointerForDelegate(clientSerialize);
      return vtable;
    }
  }

  public void InvokeHandler(global::Improbable.Worker.Dynamic.Handler handler)
  {
    handler.Accept<CollisionsCreated>(this);
  }

  private static unsafe readonly global::Improbable.Worker.Internal.ComponentProtocol.ClientDeserialize
      clientDeserialize = ClientDeserialize;
  private static unsafe readonly global::Improbable.Worker.Internal.ComponentProtocol.ClientSerialize
      clientSerialize = ClientSerialize;

  [global::Improbable.Worker.Internal.MonoPInvokeCallback(typeof(global::Improbable.Worker.Internal.ComponentProtocol.ClientDeserialize))]
  private static unsafe global::System.Byte
  ClientDeserialize(global::System.UInt32 componentId,
                    void* userData,
                    global::System.Byte handleType,
                    global::Improbable.Worker.Internal.Pbio.Object* root,
                    global::Improbable.Worker.Internal.ComponentProtocol.ClientHandle** handleOut)
  {
    *handleOut = null;
    try
    {
      *handleOut = global::Improbable.Worker.Internal.ClientHandles.HandleAlloc();
      if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Update) {
        var data = new Update();
        var fieldsToClear = new global::System.Collections.Generic.HashSet<uint>();
        var fieldsToClearCount = global::Improbable.Worker.Internal.Pbio.GetUint32Count(root, /* fields to clear */ 1);
        for (uint i = 0; i < fieldsToClearCount; ++i)
        {
           fieldsToClear.Add(global::Improbable.Worker.Internal.Pbio.IndexUint32(root, /* fields to clear */ 1, i));
        }
        var stateObject = global::Improbable.Worker.Internal.Pbio.GetObject(
            global::Improbable.Worker.Internal.Pbio.GetObject(root, /* entity_state */ 2), 1009);
        if (global::Improbable.Worker.Internal.Pbio.GetObjectCount(stateObject, 1) > 0 || fieldsToClear.Contains(1))
        {
          global::Improbable.Collections.List<global::Improbable.Character.NewCollision> field;
          {
            var _count = global::Improbable.Worker.Internal.Pbio.GetObjectCount(stateObject, 1);
            field = new global::Improbable.Collections.List<global::Improbable.Character.NewCollision>((int) _count);
            for (uint _i = 0; _i < _count; ++_i)
            {
              field.Add(global::Improbable.Character.NewCollision_Internal.Read(global::Improbable.Worker.Internal.Pbio.IndexObject(stateObject, 1, _i)));
            }
          }
          data.newCollisions.Set(field);
        }
        **handleOut = global::Improbable.Worker.Internal.ClientHandles.Instance.CreateHandle(data);
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Snapshot)
      {
        var data = new Data(global::Improbable.Character.CollisionsCreatedData_Internal.Read(
            global::Improbable.Worker.Internal.Pbio.GetObject(root, 1009)));
        **handleOut = global::Improbable.Worker.Internal.ClientHandles.Instance.CreateHandle(data);
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Request)
      {
        var data = new global::Improbable.Worker.Internal.GenericCommandObject();
        **handleOut = global::Improbable.Worker.Internal.ClientHandles.Instance.CreateHandle(data);
        var commandObject = global::Improbable.Worker.Internal.Pbio.GetObject(root, 1009);
        if (global::Improbable.Worker.Internal.Pbio.GetObjectCount(commandObject, 1) != 0) {
          data.CommandId = 1;
          data.CommandObject = new Commands.ServerCollisionCreated.Request(global::Improbable.Character.ServerCollisionCreatedRequest_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(commandObject, 1)));
          return 1;
        }
        if (global::Improbable.Worker.Internal.Pbio.GetObjectCount(commandObject, 3) != 0) {
          data.CommandId = 2;
          data.CommandObject = new Commands.ClientCollisionCreated.Request(global::Improbable.Character.ClientCollisionCreatedRequest_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(commandObject, 3)));
          return 1;
        }
        return 0;
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Response)
      {
        var data = new global::Improbable.Worker.Internal.GenericCommandObject();
        **handleOut = global::Improbable.Worker.Internal.ClientHandles.Instance.CreateHandle(data);
        var commandObject = global::Improbable.Worker.Internal.Pbio.GetObject(root, 1009);
        if (global::Improbable.Worker.Internal.Pbio.GetObjectCount(commandObject, 2) != 0) {
          data.CommandId = 1;
          data.CommandObject = new Commands.ServerCollisionCreated.Response(global::Improbable.Character.ServerCollisionCreatedResponse_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(commandObject, 2)));
          return 1;
        }
        if (global::Improbable.Worker.Internal.Pbio.GetObjectCount(commandObject, 4) != 0) {
          data.CommandId = 2;
          data.CommandObject = new Commands.ClientCollisionCreated.Response(global::Improbable.Character.ClientCollisionCreatedResponse_Internal.Read(global::Improbable.Worker.Internal.Pbio.GetObject(commandObject, 4)));
          return 1;
        }
        return 0;
      }
    }
    catch (global::System.Exception e)
    {
      global::Improbable.Worker.ClientError.LogClientException(e);
      return 0;
    }
    return 1;
  }

  [global::Improbable.Worker.Internal.MonoPInvokeCallback(typeof(global::Improbable.Worker.Internal.ComponentProtocol.ClientSerialize))]
  private static unsafe void
  ClientSerialize(global::System.UInt32 componentId,
                  void* userData,
                  global::System.Byte handleType,
                  global::Improbable.Worker.Internal.ComponentProtocol.ClientHandle* handle,
                  global::Improbable.Worker.Internal.Pbio.Object* root)
  {
    try
    {
      var _pool = global::Improbable.Worker.Internal.ClientHandles.Instance.GetGcHandlePool(*handle);
      if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Update) {
        var data = (Update) global::Improbable.Worker.Internal.ClientHandles.Instance.Dereference(*handle);
        var stateObject = global::Improbable.Worker.Internal.Pbio.AddObject(
            global::Improbable.Worker.Internal.Pbio.AddObject(root, /* entity_state */ 2), 1009);
        if (data.newCollisions.HasValue)
        {
          if (data.newCollisions.Value.Count == 0)
          {
            global::Improbable.Worker.Internal.Pbio.AddUint32(root, /* fields to clear */ 1, 1);
          }
          if (data.newCollisions.Value != null)
          {
            for (int _i = 0; _i < data.newCollisions.Value.Count; ++_i)
            {
              global::Improbable.Character.NewCollision_Internal.Write(_pool, data.newCollisions.Value[_i], global::Improbable.Worker.Internal.Pbio.AddObject(stateObject, 1));
            }
          }
        }
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Snapshot) {
        var data = (Data) global::Improbable.Worker.Internal.ClientHandles.Instance.Dereference(*handle);
        global::Improbable.Character.CollisionsCreatedData_Internal.Write(_pool, data.Value, global::Improbable.Worker.Internal.Pbio.AddObject(root, 1009));
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Request)
      {
        var data = (global::Improbable.Worker.Internal.GenericCommandObject)
            global::Improbable.Worker.Internal.ClientHandles.Instance.Dereference(*handle);
        var commandObject = global::Improbable.Worker.Internal.Pbio.AddObject(root, 1009);
        if (data.CommandId == 1)
        {
          var requestObject = (Commands.ServerCollisionCreated.Request) data.CommandObject;
          {
            global::Improbable.Character.ServerCollisionCreatedRequest_Internal.Write(_pool, requestObject.Value, global::Improbable.Worker.Internal.Pbio.AddObject(commandObject, 1));
          }
        }
        if (data.CommandId == 2)
        {
          var requestObject = (Commands.ClientCollisionCreated.Request) data.CommandObject;
          {
            global::Improbable.Character.ClientCollisionCreatedRequest_Internal.Write(_pool, requestObject.Value, global::Improbable.Worker.Internal.Pbio.AddObject(commandObject, 3));
          }
        }
      }
      else if (handleType == (byte) global::Improbable.Worker.Internal.ComponentProtocol.ClientHandleType.Response)
      {
        var data = (global::Improbable.Worker.Internal.GenericCommandObject)
            global::Improbable.Worker.Internal.ClientHandles.Instance.Dereference(*handle);
        var commandObject = global::Improbable.Worker.Internal.Pbio.AddObject(root, 1009);
        if (data.CommandId == 1)
        {
          var responseObject = (Commands.ServerCollisionCreated.Response) data.CommandObject;
          {
            global::Improbable.Character.ServerCollisionCreatedResponse_Internal.Write(_pool, responseObject.Value, global::Improbable.Worker.Internal.Pbio.AddObject(commandObject, 2));
          }
        }
        if (data.CommandId == 2)
        {
          var responseObject = (Commands.ClientCollisionCreated.Response) data.CommandObject;
          {
            global::Improbable.Character.ClientCollisionCreatedResponse_Internal.Write(_pool, responseObject.Value, global::Improbable.Worker.Internal.Pbio.AddObject(commandObject, 4));
          }
        }
      }
    }
    catch (global::System.Exception e)
    {
      global::Improbable.Worker.ClientError.LogClientException(e);
    }
  }
}

}
