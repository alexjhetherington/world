// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.Vector3d in improbable/vector3.schema.

namespace Improbable
{

public partial struct Vector3d : global::System.IEquatable<Vector3d>, global::Improbable.Collections.IDeepCopyable<Vector3d>
{
  /// <summary>
  /// Field x = 1.
  /// </summary>
  public double x;
  /// <summary>
  /// Field y = 2.
  /// </summary>
  public double y;
  /// <summary>
  /// Field z = 3.
  /// </summary>
  public double z;

  public Vector3d(
      double x,
      double y,
      double z)
  {
    this.x = x;
    this.y = y;
    this.z = z;
  }

  public static Vector3d Create()
  {
    var _result = new Vector3d();
    return _result;
  }

  public Vector3d DeepCopy()
  {
    var _result = new Vector3d();
    _result.x = x;
    _result.y = y;
    _result.z = z;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is Vector3d && Equals((Vector3d) _obj);
  }

  public static bool operator==(Vector3d a, Vector3d b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(Vector3d a, Vector3d b)
  {
    return !a.Equals(b);
  }

  public bool Equals(Vector3d _obj)
  {
    return
        x == _obj.x &&
        y == _obj.y &&
        z == _obj.z;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + x.GetHashCode();
    _result = (_result * 977) + y.GetHashCode();
    _result = (_result * 977) + z.GetHashCode();
    return _result;
  }
}

public static class Vector3d_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                                  Vector3d _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      global::Improbable.Worker.Internal.Pbio.AddDouble(_obj, 1, _data.x);
    }
    {
      global::Improbable.Worker.Internal.Pbio.AddDouble(_obj, 2, _data.y);
    }
    {
      global::Improbable.Worker.Internal.Pbio.AddDouble(_obj, 3, _data.z);
    }
  }

  public static unsafe Vector3d Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    Vector3d _data;
    {
      _data.x = global::Improbable.Worker.Internal.Pbio.GetDouble(_obj, 1);
    }
    {
      _data.y = global::Improbable.Worker.Internal.Pbio.GetDouble(_obj, 2);
    }
    {
      _data.z = global::Improbable.Worker.Internal.Pbio.GetDouble(_obj, 3);
    }
    return _data;
  }
}

}
